!function e(t,a,r){function n(l,s){if(!a[l]){if(!t[l]){var i="function"==typeof require&&require;if(!s&&i)return i(l,!0);if(c)return c(l,!0);var o=new Error("Cannot find module '"+l+"'");throw o.code="MODULE_NOT_FOUND",o}var u=a[l]={exports:{}};t[l][0].call(u.exports,function(e){var a=t[l][1][e];return n(a?a:e)},u,u.exports,e,t,a,r)}return a[l].exports}for(var c="function"==typeof require&&require,l=0;l<r.length;l++)n(r[l]);return n}({"/Users/andela/Desktop/Bisoye/projects/feedboard/assets/dist/app.js":[function(e,t,a){var r=React.createClass({displayName:"Landing",render:function(){return React.createElement("section",{className:"background"})}}),n=React.createClass({displayName:"NavBar",render:function(){return React.createElement("nav",{className:"navbar-fixed z-depth-1 amber darken"},React.createElement("div",{className:"nav-wrapper"},React.createElement("image",{src:"../../assets/images/gidi-logo.jpg",className:"brand-logo left text-darken-3"}),React.createElement("ul",{className:"right"},React.createElement("li",null,React.createElement("a",{className:"btn-flat",href:"/about"}," About GidiHots")),React.createElement("li",null,React.createElement("a",{className:"btn-flat",href:"/subscribe"}," Get Informed")),React.createElement("li",null,React.createElement("a",{className:"btn-flat",href:"/contact"}," Talk To Us ")))))}}),c=React.createClass({displayName:"MainPage",render:function(){return React.createElement("section",null,React.createElement(n,null),React.createElement(r,null))}});ReactDOM.render(React.createElement(c,null),document.getElementById("main"))},{}]},{},["/Users/andela/Desktop/Bisoye/projects/feedboard/assets/dist/app.js"]);
//# sourceMappingURL=data:application/json;base64,
